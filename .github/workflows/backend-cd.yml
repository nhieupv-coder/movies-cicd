name: Backend Continuous Deloyment
on:
  workflow_dispatch:
  pull_request:
    branches:
     - main
    types:
     - closed
  
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  NODE_VERSION: latest

jobs:
  run-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install pipenv dependency
        run: | 
          pip install pipenv
          pip install flake8
      - name: Install dependency, run test lint, run test
        run: | 
          cd starter/backend
          pipenv install 
          pipenv run lint
  stage_deploy:
    runs-on: ubuntu-latest
    needs: 
      - run-lint
    environment:
      name: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{env.AWS_SESSION_TOKEN}}
          aws-region: ${{env.AWS_REGION}}
      - name: login to amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd starter/backend
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
   
      # - name: Deploy to Staging
      #   run: |
      #    echo "Deployed to staging environment"